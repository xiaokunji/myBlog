<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>spring_cloud on 米二</title>
    <link>https://xiaokunji.com/zh/tags/spring_cloud.html</link>
    <description>Recent content in spring_cloud on 米二</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Fri, 01 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://xiaokunji.com/zh/tags/spring_cloud/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Config</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Config.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Config.html</guid>
      <description>[toc] # 介绍 &amp;amp;emsp;&amp;amp;emsp;可以理解为配置中心,把配置放在某个地方(jdbc,git,svn,vault),统一管理. - 和注册中心类似,分为客户端和服务端,服务端就是提供配置的,客户端就获取配置, - 仅SpringCloudConfig不支持自动动态获取配置,需要结合bus(总线)来实现才行 </description>
    </item>
    
    <item>
      <title>Eureka</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Eureka.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Eureka.html</guid>
      <description>[toc]
# 前言
随着服务的越来越多，越来越杂，服务之间的调用会越来越复杂，越来越难以管理。而当某个服务发生了变化，或者由于压力性能问题，多部署了几台服务，怎么让服务的消费者知晓变化，就显得很重要了。不然就会存在调用的服务其实已经下线了，但调用者不知道等异常情况。 </description>
    </item>
    
    <item>
      <title>Nacos</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Nacos.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Nacos.html</guid>
      <description>[toc]


# 前言 </description>
    </item>
    
    <item>
      <title>openFeign</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/OpenFeign.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/OpenFeign.html</guid>
      <description>[toc]


# 前言 </description>
    </item>
    
    <item>
      <title>Sleuth</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Sleuth.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/Sleuth.html</guid>
      <description>[toc]
Spring-Cloud-Sleuth是Spring Cloud的组成部分之一，为SpringCloud应用实现了一种分布式追踪解决方案，其兼容了Zipkin, HTrace和log-based追踪,官网:https://cloud.spring.io/spring-cloud-sleuth/spring-cloud-sleuth.html#_running_examples
# **1.术语(Terminology)** </description>
    </item>
    
    <item>
      <title>介绍</title>
      <link>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/%E4%BB%8B%E7%BB%8D.html</link>
      <pubDate>Fri, 01 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://xiaokunji.com/zh/java%E5%8F%8A%E5%85%B6%E6%A1%86%E6%9E%B6/springCloud/%E4%BB%8B%E7%BB%8D.html</guid>
      <description> &amp;amp;emsp;&amp;amp;emsp;SpringCloud是基于SpringBoot的一整套实现微服务的框架。它提供了微服务开发所需的&amp;lt;u&amp;gt;配置管理、服务发现、断路器、智能路由、微代理、控制总线、全局锁、决策竞选、分布式会话和集群状态管理&amp;lt;/u&amp;gt;等组件。最重要的是，基于SpringBoot，会让开发微服务架构非常方便。*列举只是部分*,更多参照官网: https://spring.io/projects/spring-cloud
&amp;gt; 来自 &amp;lt;https://blog.lqdev.cn/2018/09/04/SpringCloud/chapter-one/&amp;gt; </description>
    </item>
    
  </channel>
</rss>
